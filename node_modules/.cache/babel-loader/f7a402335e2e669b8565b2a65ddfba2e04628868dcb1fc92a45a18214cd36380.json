{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = process.env.REACT_APP_API_KEY;\nconst App = () => {\n  _s();\n  const city = 'Moscow';\n  useEffect(() => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`).then(response => console.log(response.data)).catch(error);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","useEffect","Fragment","_Fragment","jsxDEV","_jsxDEV","apiKey","process","env","REACT_APP_API_KEY","App","_s","city","get","then","response","console","log","data","catch","error","_c","$RefreshReg$"],"sources":["C:/Users/miha2/OneDrive/Рабочий стол/vs/weather_app/src/App.tsx"],"sourcesContent":["\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\n\n\n\n\nconst apiKey = process.env.REACT_APP_API_KEY;\nconst  App = () =>{\n\n\n  const city = 'Moscow'\n  useEffect(()=>{\n    axios\n    .get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`)\n    .then((response)=>console.log(response.data))\n    .catch((error))\n  },[])\n\n\n  return (\n    <>\n\n    \n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAKlC,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAC5C,MAAOC,GAAG,GAAGA,CAAA,KAAK;EAAAC,EAAA;EAGhB,MAAMC,IAAI,GAAG,QAAQ;EACrBX,SAAS,CAAC,MAAI;IACZD,KAAK,CACJa,GAAG,CAAC,qDAAqDD,IAAI,UAAUN,MAAM,eAAe,CAAC,CAC7FQ,IAAI,CAAEC,QAAQ,IAAGC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC5CC,KAAK,CAAEC,KAAM,CAAC;EACjB,CAAC,EAAC,EAAE,CAAC;EAGL,oBACEf,OAAA,CAAAF,SAAA,mBAGE,CAAC;AAEP,CAAC;AAAAQ,EAAA,CAlBMD,GAAG;AAAAW,EAAA,GAAHX,GAAG;AAoBV,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}